// Tests here inspired by HiFi-LoFi's AudioFFT tests
// https://github.com/HiFi-LoFi/AudioFFT
//
// I increased the accuracy of some of the test references to get better tolerance

var util = require('./TestUtils.js')

describe("Function of the FFT routines", function () {

    it("should pass testing of the test helper function 'CheckBuffers'", function () {
        expect(util.CheckBuffers([1,2,3,4], [1,2,3,4])).toEqual(0);
        expect(util.CheckBuffers([1,2,3,4], [1,2.2,3,4.2])).toEqual(2);
    });

    it("should work for real size 2", function () {
        const re = new Float64Array([ 3.0000000,-1.0000000 ]);
        const im = new Float64Array([ 0.00000000,0.00000000 ]);
        expect( util.TestCorrectnessReal(re, im) ).toEqual({
            "reDiffs": 0,
            "imDiffs": 0,
            "reverseDiffs": 0
        })
    });

    it("should work for real size 4", function () {
        const re = new Float64Array([ 10.000000,-2.0000000,-2.0000000 ]);
        const im = new Float64Array([ 0.00000000,2.0000000,0.00000000 ]);
        expect( util.TestCorrectnessReal(re, im) ).toEqual({
            "reDiffs": 0,
            "imDiffs": 0,
            "reverseDiffs": 0
        })
    });

    it("should work for real size 8", function () {
        const re = new Float64Array([ 36.000000,-4.0000000,-4.0000000,-4.0000000,-4.0000000 ]);
        const im = new Float64Array([ 0,	9.65685424949238,	4,	1.65685424949238,	0]);
        expect( util.TestCorrectnessReal(re, im) ).toEqual({
            "reDiffs": 0,
            "imDiffs": 0,
            "reverseDiffs": 0
        })
    });

    it("should work for real size 16", function () {
        const re = new Float64Array([136.00000,-8.0000000,-8.0000000,-8.0000000,-8.0000000,-8.0000000,-8.0000000,-8.0000000,-8.0000000]);
        const im = new Float64Array([0,	40.2187159370068	,19.3137084989848,	11.9728461013239,	8,	5.34542910335439,	3.31370849898476,	1.59129893903727,	0]);
        expect( util.TestCorrectnessReal(re, im) ).toEqual({
            "reDiffs": 0,
            "imDiffs": 0,
            "reverseDiffs": 0
        })
    });

    it("should work for real size 32", function () {
        const re = new Float64Array([528.00000, -16.000000, -16.000000, -16.000000, -16.000000, -16.000000, -16.000000,-16.000000,-16.000000, -16.000000, -16.000000, -16.000000, -16.000000, -16.000000, -16.000000,-16.000000, -16.000000]);
        const im = new Float64Array([0,	162.450726201742,	80.4374318740136,	52.7449313430131,	38.6274169979695,	29.9338945886302,	23.9456922026478,	19.4960564094076,	16,	13.1308606532586,	10.6908582067088,	8.55217817521267,	6.62741699796952,	4.85354693771748,	3.18259787807452,	1.57586245371462,	0]);
        expect( util.TestCorrectnessReal(re, im) ).toEqual({
            "reDiffs": 0,
            "imDiffs": 0,
            "reverseDiffs": 0
        })
    });

    it("should work for real size 64", function () {
        const re = new Float64Array([2080,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32]);
        const im = new Float64Array([0,651.37496399959,324.901452403484,215.72647697328,160.874863748027,127.751161080643,105.489862686026,89.4340087196953,77.254833995939,67.6583154415565,59.8677891772604,53.3887745786722,47.8913844052957,43.147005231575,38.9921128188153,35.3065592234712,32,29.0031094086127,26.2617213065171,23.7328174807051,21.3817164134176,19.1800618778216,17.1043563504253,15.1348728285222,13.254833995939,11.4497830820648,9.70709387543495,8.01558272612178,6.36519575614905,4.74675160122712,3.15172490742924,1.57205919262293,0]);
        expect( util.TestCorrectnessReal(re, im) ).toEqual({
            "reDiffs": 0,
            "imDiffs": 0,
            "reverseDiffs": 0
        })
    });

    it("should work for real size 128", function () {
        const re = new Float64Array([ 8256.0000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000,-64.000000, -64.000000,-64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000,-64.000000, -64.000000,-64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000,-64.000000, -64.000000,-64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000,-64.000000, -64.000000,-64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000,-64.000000, -64.000000,-64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000,-64.000000, -64.000000,-64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000, -64.000000,-64.000000, -64.000000,-64.000000, -64.000000 ]);
        const im = new Float64Array([0,2607.07096781333,1302.74992799918,867.626831510555,649.802904806967,518.898291435322,431.452953946559,368.841088327604,321.749727496054,285.004942362522,255.502322161285,231.266283603675,210.979725372053,193.730765076338,178.86801743939,165.913761135237,154.509667991878,144.381686523466,135.316630883113,127.146162709975,119.735578354521,112.975799686028,106.777549157344,101.067044349453,95.7827688105913,90.8730178236219,86.2940104631501,82.0084211223395,77.9842256376305,74.1937860693399,70.6131184469425,67.2213021593511,64,60.9330653888591,58.0062188172253,55.2067796644313,52.5234426130342,49.9460902178524,47.4656349614103,45.0738854953628,42.7634328268351,40.5275530353644,38.3601237556431,36.255552174742,34.2087127008507,32.2148927871548,30.2697456570445,28.3692488890153,26.5096679918781,24.6875242413518,22.8995661641296,21.1427441500374,19.41418775087,17.7111852889865,16.0311654522436,14.3716805962963,12.7303915122981,11.1050534488228,9.49350320245426,7.8936471127513,6.30344981485854,4.72092361743671,3.14411838524597,1.57111181497135,0]);
        expect( util.TestCorrectnessReal(re, im) ).toEqual({
            "reDiffs": 0,
            "imDiffs": 0,
            "reverseDiffs": 0
        })
    });

    it("should work for real size 256", function () {
        const re = new Float64Array([ 32896.000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000, -128.00000,-128.00000, -128.00000,-128.00000, -128.00000, -128.00000 ]);
        const im = new Float64Array([0,10429.8547464379,5214.14193562666,3475.22184520956,2605.49985599836,2083.45701887173,1735.25366302111,1486.38705426371,1299.60580961393,1154.21470213437,1037.79658287064,942.449618089503,862.905907893118,795.518434699397,737.682176655208,687.486775680477,643.499454992108,604.624553968934,570.009884725045,538.982660288358,511.004644322571,485.640115211302,462.532567207351,441.387489540227,421.959450744105,404.042282744421,387.461530152675,372.068577493188,357.736034878781,344.354078371791,331.827522270473,320.073458047265,309.019335983756,298.601395596973,288.763373046932,279.455430129171,270.633261766226,262.257348227936,254.292325419951,246.706452048648,239.471156709042,232.560651250227,225.951599372057,219.622831461845,213.555098314689,207.730857688762,202.134088698907,196.750129902321,191.565537621183,186.567961611149,181.746035647244,177.089280979568,172.5880209263,168.233305132938,164.016842244679,159.930939921098,155.968451275261,152.12272694822,148.38757213868,144.75720799985,141.226236893885,137.789611061154,134.442604318702,131.180786451229,128,124.896339191344,121.866130777718,118.905916591407,116.012437634451,113.182619548845,110.413559328863,107.702513152929,105.046885226068,102.444217535913,99.8921804357048,97.388563976992,94.9312699228205,92.5183043794183,90.1477709907257,87.8178646457428,85.5268656536703,83.2731343462593,81.0551060707287,78.8712865401428,76.7202475112863,74.6006227628769,72.511104349484,70.4504391087697,68.4174254017013,66.410910067197,64.4297855743098,62.4729873565265,60.539491314089,58.6283114714461,56.7384977780309,54.8691340415361,53.0193359837562,51.1882494098607,49.3750484827034,47.5789340944311,45.7991323282591,44.0348930038305,42.2854883000747,40.5502114499332,38.8283755017398,37.1193121424136,35.4223705779731,33.7369164671896,32.0623309044871,30.398009448457,28.7433611925924,27.0978078750701,25.4607830245962,23.8317311395307,22.2101068976455,20.5953743940466,18.9870064049085,17.3844836748016,15.7872942255025,14.1949326842768,12.606899629717,11.0227009532963,9.44184723487351,7.863853130444,6.28823677049195,4.71451916734009,3.14222362994269,1.5708751845832,0]);
        expect( util.TestCorrectnessReal(re, im) ).toEqual({
            "reDiffs": 0,
            "imDiffs": 0,
            "reverseDiffs": 0
        })
    });

});
